{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["date","Date","App","React","useState","days","setDays","hours","setHours","mins","setMins","sec","setSec","useEffect","setInterval","currentDate","diff","Math","floor","style","display","justifyContent","alignItems","flexDirection","height","background","color","fontSize","margin","textAlign","href","target","className","width","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qKACMA,EAAO,IAAIC,KAAK,OAAQ,KAAM,MA0ErBC,EAzEH,WAAM,MAEQC,IAAMC,SAAS,GAFvB,mBAETC,EAFS,KAEHC,EAFG,OAGUH,IAAMC,SAAS,GAHzB,mBAGTG,EAHS,KAGFC,EAHE,OAIQL,IAAMC,SAAS,GAJvB,mBAITK,EAJS,KAIHC,EAJG,OAKMP,IAAMC,SAAS,GALrB,mBAKTO,EALS,KAKJC,EALI,KAgBd,OAVFT,IAAMU,WAAU,WACdC,aAAY,WACV,IAAMC,EAAc,IAAId,KAClBe,EAAOhB,EAAOe,EACpBT,EAAQW,KAAKC,MAAMF,EAAI,QACvBR,EAASS,KAAKC,MAAOF,EAAI,MAAL,OACpBN,EAAQO,KAAKC,MAAOF,EAAI,KAAL,MACnBJ,EAAOK,KAAKC,MAAOF,EAAI,IAAkB,QACxC,OACF,IAEG,sBAAKG,MAAO,CACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,cAAe,SACfC,OAAQ,QACRC,WAAY,UACZC,MAAO,QAPX,UASI,oBAAIP,MAAO,CACPQ,SAAU,GACVC,OAAQ,EACRC,UAAW,UAHf,yBAKA,+BACI,mBAAGV,MAAO,CACNO,MAAO,QACRI,KAAK,uBAAuBC,OAAQ,SAFvC,kBADJ,sBAMA,qBAAKC,UAAU,oBAAf,SACI,sBAAKb,MAAO,CACRC,QAAS,OACTa,MAAO,IACPZ,eAAgB,iBAHpB,UAKN,uBAAMF,MAAO,CACTU,UAAW,UADf,UAGE,qBAAKK,GAAG,IAAR,SAAa7B,IAHf,UAMA,uBAAMc,MAAO,CACXU,UAAW,UADb,UAGE,qBAAKK,GAAG,IAAR,SAAa3B,IAHf,WAMA,uBAAMY,MAAO,CACXU,UAAW,UADb,UAGE,qBAAKK,GAAG,IAAR,SAAazB,IAHf,aAMA,uBAAMU,MAAO,CACXU,UAAW,UADb,UAGE,qBAAKK,GAAG,IAAR,SAAavB,IAHf,sBCnDKwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.cacf6267.chunk.js","sourcesContent":["import React from 'react';\nconst date = new Date(\"2021\", \"02\", \"15\");\nconst App = () => {\n  // const [currentDate, setCurrentDate] = React.useState(new Date());\n  const [days, setDays] = React.useState(0);\n  const [hours, setHours] = React.useState(0);\n  const [mins, setMins] = React.useState(0);\n  const [sec, setSec] = React.useState(0);\n  React.useEffect(() => {\n    setInterval(() => {\n      const currentDate = new Date();\n      const diff = date - currentDate;\n      setDays(Math.floor(diff / (1000 * 60 * 60 * 24)));\n      setHours(Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n      setMins(Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60)));\n      setSec(Math.floor((diff % (1000 * 60)) / 1000));\n    }, 1000);\n  }, []);\n    return (\n        <div style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: 'center',\n            flexDirection: \"column\",\n            height: '100vh',\n            background: '#00091B',\n            color: '#fff'\n        }}>\n            <h1 style={{\n                fontSize: 70,\n                margin: 0,\n                textAlign: \"center\"\n            }}>Coming Soon</h1>\n            <h1>\n                <a style={{\n                    color: \"#fff\"\n                }} href=\"https://iips.edu.in/\" target={'_blank'}>IIPS</a>\n                &nbsp; ACM CHAPTER</h1>\n\n            <div className=\"countdown-col col\">\n                <div style={{\n                    display: 'flex',\n                    width: 300,\n                    justifyContent: 'space-between'\n                }}>\n          <span style={{\n              textAlign: \"center\"\n          }}>\n            <div id=\"d\">{days}</div>\n            Days\n          </span>\n          <span style={{\n            textAlign: \"center\"\n          }}>\n            <div id=\"h\">{hours}</div>\n            Hours\n          </span>\n          <span style={{\n            textAlign: \"center\"\n          }}>\n            <div id=\"m\">{mins}</div>\n            Minutes\n          </span>\n          <span style={{\n            textAlign: \"center\"\n          }}>\n            <div id=\"s\">{sec}</div>\n            Seconds\n          </span>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}